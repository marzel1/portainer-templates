---
version: '3.4'

services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /docker/stacks/authentik/appdata/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_DB=${PG_DB}
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - /docker/stacks/authentik/appdata/redis:/data
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.12.2}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_EMAIL__HOST: ${AUTH_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTH_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTH_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTH_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTH_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTH_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTH_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTH_EMAIL__FROM}
    volumes:
      - /docker/stacks/authentik/appdata/media:/media
      - /docker/stacks/authentik/appdata/custom-templates:/templates
    ports:
      - "${AUTHENTIK_PORT_HTTP}:9000"
      - "${AUTHENTIK_PORT_HTTPS}:9443"
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.12.2}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_EMAIL__HOST: ${AUTH_EMAIL__HOST}
      AUTHENTIK_EMAIL__PORT: ${AUTH_EMAIL__PORT}
      AUTHENTIK_EMAIL__USERNAME: ${AUTH_EMAIL__USERNAME}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTH_EMAIL__PASSWORD}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTH_EMAIL__USE_TLS}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTH_EMAIL__USE_SSL}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTH_EMAIL__TIMEOUT}
      AUTHENTIK_EMAIL__FROM: ${AUTH_EMAIL__FROM}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/stacks/authentik/appdata/media:/media
      - /docker/stacks/authentik/appdata/certs:/certs
      - /docker/stacks/authentik/appdata/custom-templates:/templates
